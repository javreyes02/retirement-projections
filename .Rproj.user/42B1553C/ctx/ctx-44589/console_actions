{
    "type": [
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.2.3 (2023-03-15) -- \"Shortstop Beagle\"\nCopyright (C) 2023 The R Foundation for Statistical Computing\nPlatform: aarch64-apple-darwin20 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on ",
        "how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "header <- source(header.R)",
        "Error in source(header.R) : object 'header.R' not found\n",
        "> ",
        "rm(list = ls())",
        "> ",
        "header <- source('header.R')",
        "\nAttaching package: ‘dplyr’\n\nThe following objects are masked from ‘package:stats’:\n\n    filter, lag\n\nThe following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\nLoading required package: proto\ntcltk DLL is linked to '/opt/X11/lib/libX11.6.dylib'\nCould not load tcltk.  Will use slower R code instead.\nWarning message:\nIn doTryCatch(return(expr), name, parentenv, handler) :\n  unable to load shared object '/Library/Frameworks/R.framework/Resources/modules//R_X11.",
        "so':\n  dlopen(/Library/Frameworks/R.framework/Resources/modules//R_X11.so, 0x0006): Library not loaded: /opt/X11/lib/libSM.6.dylib\n  Referenced from: <A6A60F0C-DFA1-3218-B816-7CAADC1A4CD5> /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/modules/R_X11.so\n  Reason: tried: '/opt/X11/lib/libSM.6.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/X11/lib/libSM.6.dylib' (no such file), '/opt/X11/lib/libSM.6.dylib' (no such file), '/Library/Frameworks/R.framework/Resources/lib/libSM.6.dy",
        "lib' (no such file), '/Library/Java/JavaVirtualMachines/jdk-17.0.1+12/Contents/Home/lib/server/libSM.6.dylib' (no such file), '/var/folders/97/m0qh7c4j78b0jjjrm69n6hcm0000gn/T/rstudio-fallback-library-path-825487731/libSM.6.dylib' (no such file)\n",
        "> ",
        "rm(list = ls())",
        "> ",
        "header <- source('header.R')",
        "> ",
        "current_age = 26",
        "> ",
        "retire_age = 47",
        "> ",
        "pre_retire_time <- retire_age - current_age",
        "> ",
        "years <- c(1:pre_retire_time)",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  mutate(rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per)",
        "\u001B[1m\u001B[33mError\u001B[39m in `mutate()`:\u001B[22m\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `rr_pre_retire = rr_pre_retire`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'rr_pre_retire' not found\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "rr_pre_retire = .08",
        "> ",
        "rr_post_retire = .052",
        "> ",
        "inflation_per = 0.04",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  mutate(rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per)",
        "> ",
        "View(projections)",
        "> ",
        "curr_retire_savings = 150000",
        "> ",
        "curr_retire_savings = 150000",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  mutate(curr_retire_savings = curr_retire_savings,",
        "+ ",
        "         rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per) ",
        "> ",
        "current_age = 26",
        "> ",
        "retire_age = 47",
        "> ",
        "hh_income = 150000",
        "> ",
        "retire_savings_annual",
        "Error: object 'retire_savings_annual' not found\n",
        "> ",
        "curr_retire_savings = 150000",
        "> ",
        "exp_income_increase_per = 0.03",
        "> ",
        "spend_retirement = 120000",
        "> ",
        "retire_savings_annual = 50000",
        "> ",
        "curr_retire_savings = 150000",
        "> ",
        "exp_income_increase_per = 0.03",
        "> ",
        "spend_retirement = 120000",
        "> ",
        "retire_years = 45",
        "> ",
        "rr_pre_retire = .08",
        "> ",
        "rr_post_retire = .052",
        "> ",
        "inflation_per = 0.04",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         curr_retire_savings = curr_retire_savings,",
        "+ ",
        "         rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per) ",
        "> ",
        "View(projections)",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         retire_invest_annual = retire_invest_annual,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "    invest_grow_1 = curr_retire_invest * (1+rr_pre_retire)",
        "+ ",
        "  )",
        "\u001B[1m\u001B[33mError\u001B[39m in `mutate()`:\u001B[22m\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `retire_invest_annual = retire_invest_annual`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'retire_invest_annual' not found\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "current_age = 26",
        "> ",
        "retire_age = 47",
        "> ",
        "hh_income = 150000",
        "> ",
        "retire_invest_annual = 50000",
        "> ",
        "curr_retire_invest = 150000",
        "> ",
        "exp_income_increase_per = 0.03",
        "> ",
        "spend_retirement = 120000",
        "> ",
        "retire_years = 45",
        "> ",
        "rr_pre_retire = .08",
        "> ",
        "rr_post_retire = .052",
        "> ",
        "inflation_per = 0.04",
        "> ",
        "pre_retire_time <- retire_age - current_age",
        "> ",
        "years <- c(1:pre_retire_time)",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         retire_invest_annual = retire_invest_annual,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "    invest_grow_1 = curr_retire_invest * (1 + rr_pre_retire)",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         retire_invest_annual = retire_invest_annual,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "    invest_grow_1 = curr_retire_invest * (1 + rr_pre_retire),",
        "+ ",
        "    lag_invest_grow_1 = lag(invest_grow_1)",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         retire_invest_annual = retire_invest_annual,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)))",
        "+ ",
        "  )",
        "> ",
        "letters",
        " [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         retire_invest_annual = retire_invest_annual,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~.x*(1 + rr_pre_retire))",
        "+ ",
        "  )",
        "> ",
        "dat <- tibble(",
        "+ ",
        "  day = 200:210,",
        "+ ",
        "  x = sample(-10:10, size = 11,replace = T))",
        "> ",
        "dat %>% mutate(y = accumulate(x, ~ {print(.x);print(.y);.x + .y;}, .init = 5)[-1])",
        "[1] 5\n[1] 10\n[1] 15\n[1] 5\n[1] 20\n[1] -6\n[1] 14\n[1] 6\n[1] 20\n[1] 10\n[1] 30\n[1] -5\n[1] 25\n[1] 3\n[1] 28\n[1] -2\n[1] 26\n[1] -4\n[1] 22\n[1] 6\n[1] 28\n[1] -5\n\u001B[38;5;246m# A tibble: 11 × 3\u001B[39m\n     day     x     y\n   \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m   200    10    15\n\u001B[38;5;250m 2\u001B[39m   201     5    20\n\u001B[38;5;250m 3\u001B[39m   202    -\u001B[31m6\u001B[39m    14\n\u001B[38;5;250m 4\u001B[39m   203     6    20\n\u001B[38;5;250m 5\u001B[39m   204    10    30\n\u001B[38;5;250m 6\u001B[",
        "39m   205    -\u001B[31m5\u001B[39m    25\n\u001B[38;5;250m 7\u001B[39m   206     3    28\n\u001B[38;5;250m 8\u001B[39m   207    -\u001B[31m2\u001B[39m    26\n\u001B[38;5;250m 9\u001B[39m   208    -\u001B[31m4\u001B[39m    22\n\u001B[38;5;250m10\u001B[39m   209     6    28\n\u001B[38;5;250m11\u001B[39m   210    -\u001B[31m5\u001B[39m    23\n",
        "> ",
        "dat",
        "\u001B[38;5;246m# A tibble: 11 × 2\u001B[39m\n     day     x\n   \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m   200    10\n\u001B[38;5;250m 2\u001B[39m   201     5\n\u001B[38;5;250m 3\u001B[39m   202    -\u001B[31m6\u001B[39m\n\u001B[38;5;250m 4\u001B[39m   203     6\n\u001B[38;5;250m 5\u001B[39m   204    10\n\u001B[38;5;250m 6\u001B[39m   205    -\u001B[31m5\u001B[39m\n\u001B[38;5;250m 7\u001B[39m   206     3\n\u001B[38;5;250m 8\u001B[39m   207    -\u001B[31m2\u001B[39m\n\u001B[38;5;250m 9\u001B[39m   208    -\u001B[31m4\u001B[39m\n\u001B[38;5;250m10\u001B[39m   209     6\n\u001B[38;5;250m11\u001B[39m   210    -\u001B[31m5\u001B[39m\n",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         retire_invest_annual = retire_invest_annual,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~.x*(1 + rr_pre_retire)[-1])",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         retire_invest_annual = retire_invest_annual,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~.x*(1 + rr_pre_retire)[1])",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         retire_invest_annual = retire_invest_annual,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~.x*(1 + rr_pre_retire))[-1]",
        "+ ",
        "  )",
        "\u001B[1m\u001B[33mError\u001B[39m in `mutate()`:\u001B[22m\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `invest_grow = accumulate(curr_retire_invest, ~.x * (1 + rr_pre_retire))[-1]`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `invest_grow` must be size 21 or 1, not 20.\u001B[39m\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         retire_invest_annual = retire_invest_annual,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         rr_pre_retire = rr_pre_retire,",
        "+ ",
        "         rr_post_retire = rr_post_retire,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~.x*(1 + rr_pre_retire))[1]",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         retire_invest_annual = retire_invest_annual,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~.x*(1 + rr_pre_retire))",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x + retire_invest_annual)*(1 + rr_pre_retire))",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x *(1 + rr_pre_retire)) + retire_invest_annual)",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x *(1 + rr_pre_retire)) + retire_invest_annual)",
        "+ ",
        "  )",
        "> ",
        "retire_invest_annual = 50000",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x *(1 + rr_pre_retire)) + retire_invest_annual)",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~((.x *(1 + rr_pre_retire)) + retire_invest_annual))",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + .y, .init = retire_invest_annual)",
        "+ ",
        "  )",
        "\u001B[1m\u001B[33mError\u001B[39m in `mutate()`:\u001B[22m\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `invest_grow = accumulate(...)`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `invest_grow` must be size 21 or 1, not 22.\u001B[39m\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + .y, .init = retire_invest_annual)[-1]",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow_1 = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + retire_invest_annual),",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + .y, .init = retire_invest_annual)[-1]",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  invest_grow_1 = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + retire_invest_annual)",
        "+ ",
        "  )",
        "> ",
        "total_time <- retire_years + retire_age",
        "> ",
        "total_time <- retire_years + retire_age - current_age",
        "> ",
        "pre_retire_time <- retire_age - current_age",
        "> ",
        "years <- c(1:total_time)",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per,",
        "+ ",
        "         flag_pre_retire = ifelse(years <= pre_retire_time)) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  ## investment growth",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + retire_invest_annual),",
        "+ ",
        "  )",
        "\u001B[1m\u001B[33mError\u001B[39m in `mutate()`:\u001B[22m\n\u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `flag_pre_retire = ifelse(years <= pre_retire_time)`.\u001B[39m\n\u001B[1mCaused by error in `ifelse()`:\u001B[22m\n\u001B[33m!\u001B[39m argument \"yes\" is missing, with no default\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         spend_retirement = spend_retirement,",
        "+ ",
        "         inflation_per = inflation_per,",
        "+ ",
        "         flag_pre_retire = ifelse(years <= pre_retire_time, 1, 0)) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  ## investment growth",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + retire_invest_annual),",
        "+ ",
        "  )",
        "> ",
        "projections <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         inflation_per = inflation_per,",
        "+ ",
        "         flag_pre_retire = ifelse(years <= pre_retire_time, 1, 0)) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  ## investment growth",
        "+ ",
        "  invest_grow = case_when(",
        "+ ",
        "    pre_retire_time == 1 ~ accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + retire_invest_annual),",
        "+ ",
        "    TRUE ~ accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) - spend_retirement)",
        "+ ",
        "  ))",
        "> ",
        "pre_retire_projections <- start_model %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  ## investment growth",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + retire_invest_annual)",
        "+ ",
        "  )",
        "Error in mutate(., invest_grow = accumulate(curr_retire_invest, ~(.x *  : \n  object 'start_model' not found\n",
        "> ",
        "start_model <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         inflation_per = inflation_per,",
        "+ ",
        "         flag_pre_retire = ifelse(years <= pre_retire_time, 1, 0)) ",
        "> ",
        "pre_retire_projections <- start_model %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  ## investment growth",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + retire_invest_annual)",
        "+ ",
        "  )",
        "> ",
        "View(pre_retire_projections)",
        "> ",
        "pre_retire_projections <- start_model %>%",
        "+ ",
        "  filter(flag_pre_retire == 1)",
        "> ",
        "pre_retire_projections <- start_model %>%",
        "+ ",
        "  filter(flag_pre_retire == 1) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  ## investment growth",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + retire_invest_annual)",
        "+ ",
        "  )",
        "> ",
        "final_investment = pre_retire_projections %>% tail(1) %>% pull(invest_growth)",
        "\u001B[1m\u001B[33mError\u001B[39m in `pull()`:\u001B[22m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'invest_growth' not found\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "final_investment = pre_retire_projections %>% tail(1) %>% pull(invest_grow)",
        "> ",
        "post_retire_projections <- start_model %>%",
        "+ ",
        "  filter(flag_pre_retire == 0) %>%",
        "+ ",
        "  mutate(final_investment = final_investment,",
        "+ ",
        "         invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) - spend_retirement))",
        "> ",
        "View(post_retire_projections)",
        "> ",
        "post_retire_projections <- start_model %>%",
        "+ ",
        "  filter(flag_pre_retire == 0) %>%",
        "+ ",
        "  mutate(final_investment = final_investment,",
        "+ ",
        "         invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_post_retire))))",
        "> ",
        "post_retire_projections <- start_model %>%",
        "+ ",
        "  filter(flag_pre_retire == 0) %>%",
        "+ ",
        "  mutate(final_investment = final_investment,",
        "+ ",
        "         invest_grow = accumulate(final_investment, ~(.x*(1 + rr_post_retire))))",
        "> ",
        "post_retire_projections <- start_model %>%",
        "+ ",
        "  filter(flag_pre_retire == 0) %>%",
        "+ ",
        "  mutate(final_investment = final_investment,",
        "+ ",
        "         invest_grow = accumulate(final_investment, ~(.x*(1 + rr_post_retire))))",
        "> ",
        "View(post_retire_projections)",
        "> ",
        "post_retire_projections <- start_model %>%",
        "+ ",
        "  filter(flag_pre_retire == 0) %>%",
        "+ ",
        "  mutate(final_investment = final_investment,",
        "+ ",
        "         invest_grow = accumulate(final_investment, ~(.x*(1 + rr_post_retire)) - spend_retirement))",
        "> ",
        "View(post_retire_projections)",
        "> ",
        "rm(list = ls())",
        "> ",
        "header <- source('header.R')",
        "> ",
        "current_age = 26",
        "> ",
        "retire_age = 47",
        "> ",
        "hh_income = 150000",
        "> ",
        "retire_invest_annual = 50000",
        "> ",
        "curr_retire_invest = 150000",
        "> ",
        "exp_income_increase_per = 0.03",
        "> ",
        "spend_retirement = 120000",
        "> ",
        "retire_years = 45",
        "> ",
        "rr_pre_retire = .08",
        "> ",
        "rr_post_retire = .052",
        "> ",
        "inflation_per = 0.04",
        "> ",
        "total_time <- retire_years + retire_age - current_age",
        "> ",
        "pre_retire_time <- retire_age - current_age",
        "> ",
        "years <- c(1:total_time)",
        "> ",
        "start_model <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         inflation_per = inflation_per,",
        "+ ",
        "         flag_pre_retire = ifelse(years <= pre_retire_time, 1, 0)) ",
        "> ",
        "pre_retire_projections <- start_model %>%",
        "+ ",
        "  filter(flag_pre_retire == 1) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  ## investment growth",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + retire_invest_annual)",
        "+ ",
        "  )",
        "> ",
        "end_pre_retire_invest = pre_retire_projections %>% tail(1) %>% pull(invest_grow)",
        "> ",
        "post_retire_projections <- start_model %>%",
        "+ ",
        "  filter(flag_pre_retire == 0) %>%",
        "+ ",
        "  mutate(end_pre_retire_invest = end_pre_retire_invest,",
        "+ ",
        "         invest_grow = accumulate(end_pre_retire_invest, ~(.x*(1 + rr_post_retire)) - spend_retirement))",
        "> ",
        "View(post_retire_projections)",
        "> ",
        "View(pre_retire_projections)",
        "> ",
        "stack <- pre_retire_projections %>% bind_rows(post_retire_projections)",
        "> ",
        "View(stack)",
        "> ",
        "library(ggplot2)",
        "> ",
        "ggplot(stack, aes(x = years, y = invest_grow)) +",
        "+ ",
        "  geom_col()",
        "> ",
        "ggplot(stack, aes(x = years, y = invest_grow)) +",
        "+ ",
        "  geom_line()",
        "> ",
        "start_model <- tibble(years = years) %>%",
        "+ ",
        "  ## inputs",
        "+ ",
        "  mutate(hh_income = hh_income,",
        "+ ",
        "         curr_retire_invest = curr_retire_invest,",
        "+ ",
        "         exp_income_increase_per = exp_income_increase_per,",
        "+ ",
        "         flag_pre_retire = ifelse(years <= pre_retire_time, 1, 0)) ",
        "> ",
        "pre_retire_projections <- start_model %>%",
        "+ ",
        "  filter(flag_pre_retire == 1) %>%",
        "+ ",
        "  ## calculations",
        "+ ",
        "  mutate(",
        "+ ",
        "  ## investment growth",
        "+ ",
        "  invest_grow = accumulate(curr_retire_invest, ~(.x*(1 + rr_pre_retire)) + retire_invest_annual)",
        "+ ",
        "  )",
        "> ",
        "end_pre_retire_invest = pre_retire_projections %>% tail(1) %>% pull(invest_grow)",
        "> ",
        "post_retire_projections <- start_model %>%",
        "+ ",
        "  filter(flag_pre_retire == 0) %>%",
        "+ ",
        "  mutate(end_pre_retire_invest = end_pre_retire_invest,",
        "+ ",
        "         invest_grow = accumulate(end_pre_retire_invest, ~(.x*(1 + rr_post_retire)) - spend_retirement))",
        "> ",
        "stack <- pre_retire_projections %>% bind_rows(post_retire_projections)",
        "> ",
        "library(ggplot2)",
        "> ",
        "ggplot(stack, aes(x = years, y = invest_grow)) +",
        "+ ",
        "  geom_line()",
        "> ",
        "library('here')",
        "Error in library(\"here\") : there is no package called ‘here’\n",
        "> ",
        "install.packages(\"here\")",
        "trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.2/here_1.0.1.tgz'\nContent type 'application/x-gzip' length 50730 bytes (49 KB)\n==================================================\ndownloaded 49 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/97/m0qh7c4j78b0jjjrm69n6hcm0000gn/T//RtmpDEjgf5/downloaded_packages\n",
        "> ",
        "library('here')",
        "here() starts at /Users/Julia/Dev/R/_projects/retirement-projections\n",
        "> ",
        "root <- here()",
        "\nRestarting R session...\n\n"
    ]
}